{
  "version": 3,
  "sources": ["../../build/js/translators.js", "../../build/js/cool-app.js"],
  "sourcesContent": ["function isConsonant(chr) {\n    return \"bcdfghjklmnpqrstvwxz\".indexOf(chr.toLowerCase()) != -1\n}\n\n/**\n * Convert a string into robber language (as defined by Astrid Lindgren).\n * Example: \"Hejsan\" becomes \"Hohejojsosanon\"\n *\n * @param str the string to convert to robber language\n */\nfunction toRobber(str) {\n    let res = \"\"\n    for (const chr of str) {\n        if (isConsonant(chr)) {\n            res += chr + \"o\" + chr.toLowerCase()\n        } else {\n            res += chr\n        }\n    }\n    return res\n}\n\n/**\n * Convert a string into allspråket.\n * Example: \"Hejsan\" becomes \"Hallejsan\"\n *\n * @param str the string to convert to allspråket\n */\nfunction toAllsprak(str) {\n    let isNewWord = true,\n        res = \"\"\n    for (const chr of str) {\n        if (isConsonant(chr) && isNewWord) {\n            res += chr + \"all\"\n            isNewWord = false\n        } else {\n            if (chr === \" \") {\n                isNewWord = true\n            }\n\n            res += chr\n        }\n    }\n\n    return res\n}\n\n/**\n * Convert a string in robber language or allspråket into normal language.\n * This function tries to auto detect wich language has been used and\n * if it can't decide it just returns the original string.\n *\n * @param str the string to convert to normal language\n */\nfunction toNormal(str) {\n    for (let i = 0; i < str.length; ++i) {\n        const chr = str.charAt(i)\n        if (isConsonant(chr)) {\n            let nextChar = str.charAt(i + 1)\n            if (nextChar === \"o\") {\n                return reverseRobber(str)\n            } else if (nextChar === \"a\") {\n                return reverseAllsprak(str)\n            }\n\n            return str\n        }\n    }\n\n    return str\n}\n\nfunction reverseRobber(str) {\n    let res = \"\"\n    for (let i = 0; i < str.length; ++i) {\n        let chr = str.charAt(i)\n        res += chr\n        if (isConsonant(chr)) {\n            i += 2\n        }\n    }\n\n    return res\n}\n\nfunction reverseAllsprak(str) {\n    let res = \"\",\n        isNewWord = true\n    for (let i = 0; i < str.length; ++i) {\n        let chr = str.charAt(i)\n        res += chr\n        if (isConsonant(chr) && isNewWord) {\n            i += 3\n            isNewWord = false\n        } else if (chr === \" \") {\n            isNewWord = true\n        }\n    }\n\n    return res\n}\n\nexport { toRobber, toAllsprak, toNormal }\n", "import { toAllsprak, toRobber, toNormal } from \"./translators.js\"\n\nconst template = document.createElement(\"template\")\ntemplate.innerHTML = `<div>\n                        <h1>The cool application!</h1>\n                        <textarea rows=\"20\" cols=\"50\" id=\"text\"></textarea><br>\n                        <input type=\"button\" value=\"To Robber\" id=\"robber\">\n                        <input type=\"button\" value=\"To Allsprak\" id=\"allsprak\">\n                        <input type=\"button\" value=\"Reverse\" id=\"reverse\">\n                      </div>`\n\nclass CoolApp extends HTMLElement {\n    constructor() {\n        super()\n        this.attachShadow({ mode: \"open\" }).appendChild(template.content.cloneNode(true))\n\n        const robber = this.shadowRoot.getElementById(\"robber\")\n        robber.addEventListener(\"click\", this.convertTo(toRobber))\n\n        const allsprak = this.shadowRoot.getElementById(\"allsprak\")\n        allsprak.addEventListener(\"click\", this.convertTo(toAllsprak))\n\n        const reverse = this.shadowRoot.getElementById(\"reverse\")\n        reverse.addEventListener(\"click\", this.convertTo(toNormal))\n    }\n\n    convertTo(func) {\n        return () => {\n            const textArea = this.shadowRoot.getElementById(\"text\")\n            let newText = func(textArea.value)\n            textArea.value = newText\n        }\n    }\n}\n\nwindow.customElements.define(\"cool-app\", CoolApp)\n"],
  "mappings": "AAAA,WAAqB,EAAK,CACtB,MAAO,uBAAuB,QAAQ,EAAI,gBAAkB,GAShE,WAAkB,EAAK,CACnB,GAAI,GAAM,GACV,OAAW,KAAO,GACd,AAAI,EAAY,GACZ,GAAO,EAAM,IAAM,EAAI,cAEvB,GAAO,EAGf,MAAO,GASX,WAAoB,EAAK,CACrB,GAAI,GAAY,GACZ,EAAM,GACV,OAAW,KAAO,GACd,AAAI,EAAY,IAAQ,EACpB,IAAO,EAAM,MACb,EAAY,IAER,KAAQ,KACR,GAAY,IAGhB,GAAO,GAIf,MAAO,GAUX,WAAkB,EAAK,CACnB,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,EAAE,EAAG,CACjC,GAAM,GAAM,EAAI,OAAO,GACvB,GAAI,EAAY,GAAM,CAClB,GAAI,GAAW,EAAI,OAAO,EAAI,GAC9B,MAAI,KAAa,IACN,EAAc,GACd,IAAa,IACb,EAAgB,GAGpB,GAIf,MAAO,GAGX,WAAuB,EAAK,CACxB,GAAI,GAAM,GACV,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,EAAE,EAAG,CACjC,GAAI,GAAM,EAAI,OAAO,GACrB,GAAO,EACH,EAAY,IACZ,IAAK,GAIb,MAAO,GAGX,WAAyB,EAAK,CAC1B,GAAI,GAAM,GACN,EAAY,GAChB,OAAS,GAAI,EAAG,EAAI,EAAI,OAAQ,EAAE,EAAG,CACjC,GAAI,GAAM,EAAI,OAAO,GACrB,GAAO,EACP,AAAI,EAAY,IAAQ,EACpB,IAAK,EACL,EAAY,IACL,IAAQ,KACf,GAAY,IAIpB,MAAO,GCjGX,GAAM,GAAW,SAAS,cAAc,YACxC,EAAS,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAQrB,mBAAsB,YAAY,CAC9B,aAAc,CACV,QACA,KAAK,aAAa,CAAE,KAAM,SAAU,YAAY,EAAS,QAAQ,UAAU,KAG3E,AADe,KAAK,WAAW,eAAe,UACvC,iBAAiB,QAAS,KAAK,UAAU,IAGhD,AADiB,KAAK,WAAW,eAAe,YACvC,iBAAiB,QAAS,KAAK,UAAU,IAGlD,AADgB,KAAK,WAAW,eAAe,WACvC,iBAAiB,QAAS,KAAK,UAAU,IAGrD,UAAU,EAAM,CACZ,MAAO,IAAM,CACT,GAAM,GAAW,KAAK,WAAW,eAAe,QAC5C,EAAU,EAAK,EAAS,OAC5B,EAAS,MAAQ,KAK7B,OAAO,eAAe,OAAO,WAAY",
  "names": []
}
